#+Title: MIDES - Model Inference and control for Discrete-Event Systems

* About

* Usage

** Requirements
Download and install Simple Build Tool (SBT). Files and instructions for your platform are available at the project website, http://www.scala-sbt.org/.

# To run the program go into the project root and run using:
# #+begin_src shell
# sbt run
# #+end_src
For Matlab interface, make sure to follow the instructions [[https://se.mathworks.com/help/matlab/matlab_external/setup-environment.html][here.]]
** Running

Configure the SUL in the main file [[file:src/main/scala/main.scala::val%20sul:%20SUL%20=%20modelName%20match%20{][here]]. The SUL takes as parameters: the model, a simulator, specifications if needed, a flag stating if the intention is to learn a plant or a supervisor (this flag is currently redundant) and a boolean value if the model is supposed to accept partial states. 

Set the model to learn, solver name and other relevant configuration in the [[file://src/main/resources/application.conf][application.conf]]. On running the program the first time after cloning copy the contents of  [[file:src/main/resources/application.conf.example][application.conf.example]] into a application.conf in the same folder.

The model files are created under the [[file:src/main/scala/modelbuilding/models][models folder]] using traits specified in [[file:src/main/scala/modelbuilding/core][core folder]].

Provide the name of the model [[file:src/main/scala/main.scala::val%20modelName%20=%20"TestUnit"][here]] and the solver you want to use [[file:src/main/scala/main.scala::val%20solver:%20String%20=%20"LStarSuprLearner"%20//%20"modular",%20"mono"][here]] and run the program using ~sbt run.~

* Contributing

** Scala Style

This project uses Scalafmt to enforce some of the code style rules.

It's recommended to enable Scalafmt formatting in IntelliJ. Use version 2019.1 or later. In Preferences > Editor > Code Style > Scala, select Scalafmt as formatter and enable "Reformat on file save". IntelliJ will then use the same settings and version as defined in .scalafmt.conf file. Then it's not needed to use sbt ~scalafmtAll~ when editing with IntelliJ.

If you edit the code without Intellij, it is always a good practice to run ~sbt scalafmtall~ before pushing committing your code.
* Contributors
- [[https://github.com/ashfaqfarooqui][Ashfaq Farooqui]]
- [[https://github.com/frehage][Fredrik Hagebring]]
- [[https://github.com/ramontijsseclaase][Ramon Tijsse Claase]]

* License
The project is licensed under the [[./LICENSE][ GNU General Public License version 3 (or newer).]]
